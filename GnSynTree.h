#ifndef __GN_SYNTREE__
#define __GN_SYNTREE__
// This file was automatically generated by EbnfStudio; don't modify it!

#include <GnTools/GnTokenType.h>
#include <GnTools/GnToken.h>
#include <QList>

namespace Gn {

	struct SynTree {
		enum ParserRule {
			R_First = TT_Max + 1,
			R_ArrayAccess,
			R_AssignOp,
			R_Assignment,
			R_BinaryOp,
			R_Block,
			R_Call,
			R_Condition,
			R_Expr,
			R_ExprList,
			R_Expr_nlr_,
			R_File,
			R_LValue,
			R_List_,
			R_PrimaryExpr,
			R_ScopeAccess,
			R_Scope_,
			R_Statement,
			R_StatementList,
			R_UnaryExpr,
			R_UnaryOp,
			R_comment__,
			R_signed_,
			R_Last
		};
		SynTree(quint16 r = Tok_Invalid, const Token& = Token() );
		SynTree(const Token& t ):d_tok(t){}
		~SynTree() { foreach(SynTree* n, d_children) delete n; }

		static const char* rToStr( quint16 r );

		Gn::Token d_tok;
		QList<SynTree*> d_children;
	};

}
#endif // __GN_SYNTREE__
