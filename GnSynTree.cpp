// This file was automatically generated by EbnfStudio; don't modify it!
#include "GnSynTree.h"
using namespace Gn;

SynTree::SynTree(quint16 r, const Token& t ):d_tok(r){
	d_tok.d_lineNr = t.d_lineNr;
	d_tok.d_colNr = t.d_colNr;
	d_tok.d_sourcePath = t.d_sourcePath;
}

const char* SynTree::rToStr( quint16 r ) {
	switch(r) {
		case R_ArrayAccess: return "ArrayAccess";
		case R_AssignOp: return "AssignOp";
		case R_Assignment: return "Assignment";
		case R_BinaryOp: return "BinaryOp";
		case R_Block: return "Block";
		case R_Call: return "Call";
		case R_Condition: return "Condition";
		case R_Expr: return "Expr";
		case R_ExprList: return "ExprList";
		case R_Expr_nlr_: return "Expr_nlr_";
		case R_File: return "File";
		case R_LValue: return "LValue";
		case R_List_: return "List_";
		case R_PrimaryExpr: return "PrimaryExpr";
		case R_ScopeAccess: return "ScopeAccess";
		case R_Scope_: return "Scope_";
		case R_Statement: return "Statement";
		case R_StatementList: return "StatementList";
		case R_UnaryExpr: return "UnaryExpr";
		case R_UnaryOp: return "UnaryOp";
		case R_comment__: return "comment_";
		case R_signed_: return "signed_";
	default: if(r<R_First) return tokenTypeName(r); else return "";
}
}
